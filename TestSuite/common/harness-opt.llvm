; ModuleID = '/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/common//harness.llvm'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [12 x i8] c"output.data\00", align 1
@.str2 = private unnamed_addr constant [45 x i8] c"out_fd>0 && \22Couldn't open output data file\22\00", align 1
@.str3 = private unnamed_addr constant [79 x i8] c"/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/common//harness.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str4 = private unnamed_addr constant [10 x i8] c"Success.\0A\00", align 1
@.str1 = private constant [270 x i8] c"stencil/stencil_label1_buf1 23\0Astencil/stencil_label1_buf2 47\0Astencil/stencil_label2_buf1 24\0Astencil/stencil_label2_buf2 48\0Astencil/stencil_label3_buf1 26\0Astencil/stencil_label3_buf2 50\0Astencil/stencil_label4_buf1 27\0Astencil/stencil_label4_buf2 51\0Astencil/task_loop 22\0A\00"
@.str5 = private constant [5 x i8] c"main\00"
@.str6 = private constant [2 x i8] c"0\00"
@.str7 = private constant [4 x i8] c"0-0\00"
@.str8 = private constant [28 x i8] c"trace_logger_write_labelmap\00"
@.str9 = private constant [4 x i8] c"phi\00"
@.str10 = private constant [1 x i8] zeroinitializer
@.str11 = private constant [4 x i8] c"phi\00"
@.str12 = private constant [1 x i8] zeroinitializer
@.str13 = private constant [4 x i8] c"phi\00"
@.str14 = private constant [1 x i8] zeroinitializer
@.str15 = private constant [4 x i8] c"phi\00"
@.str16 = private constant [1 x i8] zeroinitializer
@.str17 = private constant [4 x i8] c"phi\00"
@.str18 = private constant [5 x i8] c"main\00"
@.str19 = private constant [2 x i8] c"0\00"
@.str20 = private constant [2 x i8] c"1\00"
@.str21 = private constant [14 x i8] c"run_benchmark\00"
@.str22 = private constant [4 x i8] c"phi\00"
@.str23 = private constant [2 x i8] c"1\00"
@.str24 = private constant [4 x i8] c"phi\00"
@.str25 = private constant [5 x i8] c"main\00"
@.str26 = private constant [2 x i8] c"0\00"
@.str27 = private constant [2 x i8] c"2\00"
@.str28 = private constant [5 x i8] c"open\00"
@.str29 = private constant [4 x i8] c"phi\00"
@.str30 = private constant [1 x i8] zeroinitializer
@.str31 = private constant [4 x i8] c"phi\00"
@.str32 = private constant [1 x i8] zeroinitializer
@.str33 = private constant [4 x i8] c"phi\00"
@.str34 = private constant [1 x i8] zeroinitializer
@.str35 = private constant [4 x i8] c"phi\00"
@.str36 = private constant [1 x i8] zeroinitializer
@.str37 = private constant [4 x i8] c"phi\00"
@.str38 = private constant [2 x i8] c"2\00"
@.str39 = private constant [4 x i8] c"phi\00"
@.str40 = private constant [5 x i8] c"main\00"
@.str41 = private constant [2 x i8] c"0\00"
@.str42 = private constant [2 x i8] c"3\00"
@.str43 = private constant [1 x i8] zeroinitializer
@.str44 = private constant [4 x i8] c"phi\00"
@.str45 = private constant [2 x i8] c"2\00"
@.str46 = private constant [4 x i8] c"phi\00"
@.str47 = private constant [2 x i8] c"3\00"
@.str48 = private constant [4 x i8] c"phi\00"
@.str49 = private constant [5 x i8] c"main\00"
@.str50 = private constant [2 x i8] c"0\00"
@.str51 = private constant [4 x i8] c"0-5\00"
@.str52 = private constant [2 x i8] c"5\00"
@.str53 = private constant [4 x i8] c"phi\00"
@.str54 = private constant [2 x i8] c"4\00"
@.str55 = private constant [4 x i8] c"phi\00"
@.str56 = private constant [2 x i8] c"3\00"
@.str57 = private constant [4 x i8] c"phi\00"
@.str58 = private constant [5 x i8] c"main\00"
@.str59 = private constant [2 x i8] c"4\00"
@.str60 = private constant [4 x i8] c"4-0\00"
@.str61 = private constant [14 x i8] c"__assert_fail\00"
@.str62 = private constant [4 x i8] c"phi\00"
@.str63 = private constant [1 x i8] zeroinitializer
@.str64 = private constant [4 x i8] c"phi\00"
@.str65 = private constant [1 x i8] zeroinitializer
@.str66 = private constant [4 x i8] c"phi\00"
@.str67 = private constant [1 x i8] zeroinitializer
@.str68 = private constant [4 x i8] c"phi\00"
@.str69 = private constant [1 x i8] zeroinitializer
@.str70 = private constant [4 x i8] c"phi\00"
@.str71 = private constant [1 x i8] zeroinitializer
@.str72 = private constant [4 x i8] c"phi\00"
@.str73 = private constant [1 x i8] zeroinitializer
@.str74 = private constant [4 x i8] c"phi\00"
@.str75 = private constant [1 x i8] zeroinitializer
@.str76 = private constant [4 x i8] c"phi\00"
@.str77 = private constant [1 x i8] zeroinitializer
@.str78 = private constant [4 x i8] c"phi\00"
@.str79 = private constant [5 x i8] c"main\00"
@.str80 = private constant [2 x i8] c"4\00"
@.str81 = private constant [4 x i8] c"4-1\00"
@.str82 = private constant [5 x i8] c"main\00"
@.str83 = private constant [2 x i8] c"5\00"
@.str84 = private constant [4 x i8] c"5-0\00"
@.str85 = private constant [15 x i8] c"data_to_output\00"
@.str86 = private constant [4 x i8] c"phi\00"
@.str87 = private constant [2 x i8] c"2\00"
@.str88 = private constant [4 x i8] c"phi\00"
@.str89 = private constant [1 x i8] zeroinitializer
@.str90 = private constant [4 x i8] c"phi\00"
@.str91 = private constant [2 x i8] c"1\00"
@.str92 = private constant [4 x i8] c"phi\00"
@.str93 = private constant [1 x i8] zeroinitializer
@.str94 = private constant [4 x i8] c"phi\00"
@.str95 = private constant [5 x i8] c"main\00"
@.str96 = private constant [2 x i8] c"5\00"
@.str97 = private constant [2 x i8] c"6\00"
@.str98 = private constant [6 x i8] c"close\00"
@.str99 = private constant [4 x i8] c"phi\00"
@.str100 = private constant [2 x i8] c"2\00"
@.str101 = private constant [4 x i8] c"phi\00"
@.str102 = private constant [1 x i8] zeroinitializer
@.str103 = private constant [4 x i8] c"phi\00"
@.str104 = private constant [2 x i8] c"6\00"
@.str105 = private constant [4 x i8] c"phi\00"
@.str106 = private constant [5 x i8] c"main\00"
@.str107 = private constant [2 x i8] c"5\00"
@.str108 = private constant [2 x i8] c"7\00"
@.str109 = private constant [7 x i8] c"printf\00"
@.str110 = private constant [4 x i8] c"phi\00"
@.str111 = private constant [1 x i8] zeroinitializer
@.str112 = private constant [4 x i8] c"phi\00"
@.str113 = private constant [1 x i8] zeroinitializer
@.str114 = private constant [4 x i8] c"phi\00"
@.str115 = private constant [2 x i8] c"7\00"
@.str116 = private constant [4 x i8] c"phi\00"
@.str117 = private constant [5 x i8] c"main\00"
@.str118 = private constant [2 x i8] c"5\00"
@.str119 = private constant [4 x i8] c"5-1\00"
@.str120 = private constant [1 x i8] zeroinitializer
@.str121 = private constant [4 x i8] c"phi\00"

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readnone %argv) #0 {
  call void @trace_logger_log0(i64 15, i8* getelementptr inbounds ([5 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str7, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !21
  call void @trace_logger_log_int(i64 3, i64 64, i64 ptrtoint (void (i8*, i64)* @trace_logger_write_labelmap to i64), i64 1, i8* getelementptr inbounds ([28 x i8]* @.str8, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str9, i32 0, i32 0)), !dbg !21
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint ([270 x i8]* @.str1 to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str10, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str11, i32 0, i32 0)), !dbg !21
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([270 x i8]* @.str1 to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str13, i32 0, i32 0)), !dbg !21
  call void @trace_logger_log_int(i64 2, i64 64, i64 269, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str14, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str15, i32 0, i32 0)), !dbg !21
  call void @trace_logger_log_int(i64 24601, i64 64, i64 269, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str16, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str17, i32 0, i32 0)), !dbg !21
  call void @trace_logger_write_labelmap(i8* getelementptr inbounds ([270 x i8]* @.str1, i32 0, i32 0), i64 269), !dbg !21
  tail call void @llvm.dbg.value(metadata !{i32 %argc}, i64 0, metadata !14), !dbg !21
  tail call void @llvm.dbg.value(metadata !{i8** %argv}, i64 0, metadata !15), !dbg !21
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str20, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !22
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint (i8* (...)* @run_benchmark to i64), i64 1, i8* getelementptr inbounds ([14 x i8]* @.str21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str22, i32 0, i32 0)), !dbg !22
  %1 = tail call i8* (...)* @run_benchmark() #4, !dbg !22
  %2 = ptrtoint i8* %1 to i64, !dbg !22
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %2, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str23, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str24, i32 0, i32 0)), !dbg !22
  tail call void @llvm.dbg.value(metadata !{i8* %1}, i64 0, metadata !16), !dbg !22
  call void @trace_logger_log0(i64 31, i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str27, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !23
  call void @trace_logger_log_int(i64 4, i64 64, i64 ptrtoint (i32 (i8*, i32, ...)* @open to i64), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str29, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint ([12 x i8]* @.str to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str30, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str31, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([12 x i8]* @.str to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str32, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str33, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 2, i64 32, i64 577, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str34, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str35, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 24601, i64 32, i64 577, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str36, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str37, i32 0, i32 0)), !dbg !23
  %3 = tail call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([12 x i8]* @.str, i64 0, i64 0), i32 577, i32 438) #4, !dbg !23
  %4 = zext i32 %3 to i64, !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %4, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str38, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str39, i32 0, i32 0)), !dbg !23
  tail call void @llvm.dbg.value(metadata !{i32 %3}, i64 0, metadata !17), !dbg !23
  call void @trace_logger_log0(i64 32, i8* getelementptr inbounds ([5 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str42, i32 0, i32 0), i64 46, i1 false, i1 true), !dbg !24
  call void @trace_logger_log_int(i64 2, i64 32, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str43, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str44, i32 0, i32 0)), !dbg !24
  %5 = zext i32 %3 to i64, !dbg !24
  call void @trace_logger_log_int(i64 1, i64 32, i64 %5, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str45, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str46, i32 0, i32 0)), !dbg !24
  %6 = icmp sgt i32 %3, 0, !dbg !24
  %7 = zext i1 %6 to i64, !dbg !24
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %7, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str47, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str48, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log0(i64 32, i8* getelementptr inbounds ([5 x i8]* @.str49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str50, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str51, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !24
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str53, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str54, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str55, i32 0, i32 0)), !dbg !24
  %8 = zext i1 %6 to i64, !dbg !24
  call void @trace_logger_log_int(i64 1, i64 1, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str56, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str57, i32 0, i32 0)), !dbg !24
  br i1 %6, label %10, label %9, !dbg !24

; <label>:9                                       ; preds = %0
  call void @trace_logger_log0(i64 32, i8* getelementptr inbounds ([5 x i8]* @.str58, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str59, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str60, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !24
  call void @trace_logger_log_int(i64 5, i64 64, i64 ptrtoint (void (i8*, i8*, i32, i8*)* @__assert_fail to i64), i64 1, i8* getelementptr inbounds ([14 x i8]* @.str61, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str62, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint ([45 x i8]* @.str2 to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str63, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str64, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([45 x i8]* @.str2 to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str65, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str66, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint ([79 x i8]* @.str3 to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str67, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str68, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([79 x i8]* @.str3 to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str69, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str70, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 3, i64 32, i64 32, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str71, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str72, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 24601, i64 32, i64 32, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str73, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str74, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 4, i64 64, i64 ptrtoint ([23 x i8]* @__PRETTY_FUNCTION__.main to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str75, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str76, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([23 x i8]* @__PRETTY_FUNCTION__.main to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str77, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str78, i32 0, i32 0)), !dbg !24
  tail call void @__assert_fail(i8* getelementptr inbounds ([45 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8]* @.str3, i64 0, i64 0), i32 32, i8* getelementptr inbounds ([23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #5, !dbg !24
  call void @trace_logger_log0(i64 32, i8* getelementptr inbounds ([5 x i8]* @.str79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str81, i32 0, i32 0), i64 7, i1 false, i1 true), !dbg !24
  unreachable, !dbg !24

; <label>:10                                      ; preds = %0
  call void @trace_logger_log0(i64 33, i8* getelementptr inbounds ([5 x i8]* @.str82, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str84, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !25
  call void @trace_logger_log_int(i64 3, i64 64, i64 ptrtoint (void (i32, i8*)* @data_to_output to i64), i64 1, i8* getelementptr inbounds ([15 x i8]* @.str85, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str86, i32 0, i32 0)), !dbg !25
  %11 = zext i32 %3 to i64, !dbg !25
  call void @trace_logger_log_int(i64 1, i64 32, i64 %11, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str87, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str88, i32 0, i32 0)), !dbg !25
  %12 = zext i32 %3 to i64, !dbg !25
  call void @trace_logger_log_int(i64 24601, i64 32, i64 %12, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str89, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str90, i32 0, i32 0)), !dbg !25
  %13 = ptrtoint i8* %1 to i64, !dbg !25
  call void @trace_logger_log_int(i64 2, i64 64, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str91, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str92, i32 0, i32 0)), !dbg !25
  %14 = ptrtoint i8* %1 to i64, !dbg !25
  call void @trace_logger_log_int(i64 24601, i64 64, i64 %14, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str93, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str94, i32 0, i32 0)), !dbg !25
  tail call void @data_to_output(i32 %3, i8* %1) #4, !dbg !25
  call void @trace_logger_log0(i64 34, i8* getelementptr inbounds ([5 x i8]* @.str95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str96, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str97, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !26
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32 (i32)* @close to i64), i64 1, i8* getelementptr inbounds ([6 x i8]* @.str98, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str99, i32 0, i32 0)), !dbg !26
  %15 = zext i32 %3 to i64, !dbg !26
  call void @trace_logger_log_int(i64 1, i64 32, i64 %15, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str100, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str101, i32 0, i32 0)), !dbg !26
  %16 = zext i32 %3 to i64, !dbg !26
  call void @trace_logger_log_int(i64 24601, i64 32, i64 %16, i64 1, i8* getelementptr inbounds ([1 x i8]* @.str102, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str103, i32 0, i32 0)), !dbg !26
  %17 = tail call i32 @close(i32 %3) #4, !dbg !26
  %18 = zext i32 %17 to i64, !dbg !27
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %18, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str104, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str105, i32 0, i32 0)), !dbg !27
  call void @trace_logger_log0(i64 56, i8* getelementptr inbounds ([5 x i8]* @.str106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str107, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str108, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !27
  call void @trace_logger_log_int(i64 2, i64 64, i64 ptrtoint (i32 (i8*, ...)* @printf to i64), i64 1, i8* getelementptr inbounds ([7 x i8]* @.str109, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str110, i32 0, i32 0)), !dbg !27
  call void @trace_logger_log_int(i64 1, i64 64, i64 ptrtoint ([10 x i8]* @.str4 to i64), i64 0, i8* getelementptr inbounds ([1 x i8]* @.str111, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str112, i32 0, i32 0)), !dbg !27
  call void @trace_logger_log_int(i64 24601, i64 64, i64 ptrtoint ([10 x i8]* @.str4 to i64), i64 1, i8* getelementptr inbounds ([1 x i8]* @.str113, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str114, i32 0, i32 0)), !dbg !27
  %19 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str4, i64 0, i64 0)) #4, !dbg !27
  %20 = zext i32 %19 to i64, !dbg !28
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %20, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str115, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str116, i32 0, i32 0)), !dbg !28
  call void @trace_logger_log0(i64 57, i8* getelementptr inbounds ([5 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str119, i32 0, i32 0), i64 1, i1 false, i1 true), !dbg !28
  call void @trace_logger_log_int(i64 1, i64 32, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str120, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str121, i32 0, i32 0)), !dbg !28
  ret i32 0, !dbg !28
}

declare i8* @run_benchmark(...) #1

declare i32 @open(i8*, i32, ...) #1

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #2

declare void @data_to_output(i32, i8*) #1

declare i32 @close(i32) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #3

declare void @trace_logger_log0(i64, i8*, i8*, i8*, i64, i1, i1)

declare void @trace_logger_log_int(i64, i64, i64, i64, i8*, i64, i8*)

declare void @trace_logger_log_double(i64, i64, double, i64, i8*, i64, i8*)

declare void @trace_logger_write_labelmap(i8*, i64)

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { nobuiltin nounwind }
attributes #5 = { nobuiltin noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!18, !19}
!llvm.ident = !{!20}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4 (tags/RELEASE_34/final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/stencil/stencil2d//home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/common/harness.c] [DW_LANG_C99]
!1 = metadata !{metadata !"/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/common/harness.c", metadata !"/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/stencil/stencil2d"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !5, metadata !6, metadata !"main", metadata !"main", metadata !"", i32 15, metadata !7, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8**)* @main, null, null, metadata !13, i32 16} ; [ DW_TAG_subprogram ] [line 15] [def] [scope 16] [main]
!5 = metadata !{metadata !"/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/common//harness.c", metadata !"/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/stencil/stencil2d"}
!6 = metadata !{i32 786473, metadata !5}          ; [ DW_TAG_file_type ] [/home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/stencil/stencil2d//home/bachelor/andrew0325/gem5-aladdin/src/aladdin/TestSuite/common//harness.c]
!7 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !8, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!8 = metadata !{metadata !9, metadata !9, metadata !10}
!9 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!10 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !11} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!11 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !12} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from char]
!12 = metadata !{i32 786468, null, null, metadata !"char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!13 = metadata !{metadata !14, metadata !15, metadata !16, metadata !17}
!14 = metadata !{i32 786689, metadata !4, metadata !"argc", metadata !6, i32 16777231, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [argc] [line 15]
!15 = metadata !{i32 786689, metadata !4, metadata !"argv", metadata !6, i32 33554447, metadata !10, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [argv] [line 15]
!16 = metadata !{i32 786688, metadata !4, metadata !"data", metadata !6, i32 27, metadata !11, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [data] [line 27]
!17 = metadata !{i32 786688, metadata !4, metadata !"out_fd", metadata !6, i32 30, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [out_fd] [line 30]
!18 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!19 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!20 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
!21 = metadata !{i32 15, i32 0, metadata !4, null}
!22 = metadata !{i32 27, i32 0, metadata !4, null}
!23 = metadata !{i32 31, i32 0, metadata !4, null}
!24 = metadata !{i32 32, i32 0, metadata !4, null}
!25 = metadata !{i32 33, i32 0, metadata !4, null}
!26 = metadata !{i32 34, i32 0, metadata !4, null}
!27 = metadata !{i32 56, i32 0, metadata !4, null}
!28 = metadata !{i32 57, i32 0, metadata !4, null}
